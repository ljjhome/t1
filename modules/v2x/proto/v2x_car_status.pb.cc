// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/v2x/proto/v2x_car_status.proto

#include "modules/v2x/proto/v2x_car_status.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace apollo {
namespace v2x {
constexpr CarStatus::CarStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : localization_(nullptr)
  , chassis_detail_(nullptr)
  , junction_(nullptr)
  , rsu_id_(nullptr){}
struct CarStatusDefaultTypeInternal {
  constexpr CarStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CarStatusDefaultTypeInternal() {}
  union {
    CarStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CarStatusDefaultTypeInternal _CarStatus_default_instance_;
}  // namespace v2x
}  // namespace apollo
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, localization_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, chassis_detail_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, junction_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, rsu_id_),
  0,
  1,
  2,
  3,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, -1, sizeof(::apollo::v2x::CarStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::v2x::_CarStatus_default_instance_),
};

const char descriptor_table_protodef_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n&modules/v2x/proto/v2x_car_status.proto"
  "\022\napollo.v2x\032-modules/localization/proto"
  "/localization.proto\032)modules/canbus/prot"
  "o/chassis_detail.proto\032$modules/v2x/prot"
  "o/v2x_junction.proto\"\312\001\n\tCarStatus\022\?\n\014lo"
  "calization\030\001 \001(\0132).apollo.localization.L"
  "ocalizationEstimate\0224\n\016chassis_detail\030\002 "
  "\001(\0132\034.apollo.canbus.ChassisDetail\022&\n\010jun"
  "ction\030\003 \001(\0132\024.apollo.v2x.Junction\022\036\n\006rsu"
  "_id\030\004 \001(\0132\016.apollo.v2x.Id"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_deps[3] = {
  &::descriptor_table_modules_2fcanbus_2fproto_2fchassis_5fdetail_2eproto,
  &::descriptor_table_modules_2flocalization_2fproto_2flocalization_2eproto,
  &::descriptor_table_modules_2fv2x_2fproto_2fv2x_5fjunction_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto = {
  false, false, 385, descriptor_table_protodef_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto, "modules/v2x/proto/v2x_car_status.proto", 
  &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_once, descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_deps, 3, 1,
  schemas, file_default_instances, TableStruct_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto::offsets,
  file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto, file_level_enum_descriptors_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto, file_level_service_descriptors_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_getter() {
  return &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto(&descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto);
namespace apollo {
namespace v2x {

// ===================================================================

class CarStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CarStatus>()._has_bits_);
  static const ::apollo::localization::LocalizationEstimate& localization(const CarStatus* msg);
  static void set_has_localization(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::canbus::ChassisDetail& chassis_detail(const CarStatus* msg);
  static void set_has_chassis_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::v2x::Junction& junction(const CarStatus* msg);
  static void set_has_junction(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::v2x::Id& rsu_id(const CarStatus* msg);
  static void set_has_rsu_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

const ::apollo::localization::LocalizationEstimate&
CarStatus::_Internal::localization(const CarStatus* msg) {
  return *msg->localization_;
}
const ::apollo::canbus::ChassisDetail&
CarStatus::_Internal::chassis_detail(const CarStatus* msg) {
  return *msg->chassis_detail_;
}
const ::apollo::v2x::Junction&
CarStatus::_Internal::junction(const CarStatus* msg) {
  return *msg->junction_;
}
const ::apollo::v2x::Id&
CarStatus::_Internal::rsu_id(const CarStatus* msg) {
  return *msg->rsu_id_;
}
void CarStatus::clear_localization() {
  if (localization_ != nullptr) localization_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void CarStatus::clear_chassis_detail() {
  if (chassis_detail_ != nullptr) chassis_detail_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void CarStatus::clear_junction() {
  if (junction_ != nullptr) junction_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void CarStatus::clear_rsu_id() {
  if (rsu_id_ != nullptr) rsu_id_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
CarStatus::CarStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:apollo.v2x.CarStatus)
}
CarStatus::CarStatus(const CarStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_localization()) {
    localization_ = new ::apollo::localization::LocalizationEstimate(*from.localization_);
  } else {
    localization_ = nullptr;
  }
  if (from._internal_has_chassis_detail()) {
    chassis_detail_ = new ::apollo::canbus::ChassisDetail(*from.chassis_detail_);
  } else {
    chassis_detail_ = nullptr;
  }
  if (from._internal_has_junction()) {
    junction_ = new ::apollo::v2x::Junction(*from.junction_);
  } else {
    junction_ = nullptr;
  }
  if (from._internal_has_rsu_id()) {
    rsu_id_ = new ::apollo::v2x::Id(*from.rsu_id_);
  } else {
    rsu_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.v2x.CarStatus)
}

void CarStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&localization_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rsu_id_) -
    reinterpret_cast<char*>(&localization_)) + sizeof(rsu_id_));
}

CarStatus::~CarStatus() {
  // @@protoc_insertion_point(destructor:apollo.v2x.CarStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CarStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete localization_;
  if (this != internal_default_instance()) delete chassis_detail_;
  if (this != internal_default_instance()) delete junction_;
  if (this != internal_default_instance()) delete rsu_id_;
}

void CarStatus::ArenaDtor(void* object) {
  CarStatus* _this = reinterpret_cast< CarStatus* >(object);
  (void)_this;
}
void CarStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CarStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CarStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.v2x.CarStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(localization_ != nullptr);
      localization_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(chassis_detail_ != nullptr);
      chassis_detail_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(junction_ != nullptr);
      junction_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(rsu_id_ != nullptr);
      rsu_id_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CarStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.localization.LocalizationEstimate localization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_localization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chassis_detail(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.v2x.Junction junction = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_junction(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.v2x.Id rsu_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_rsu_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CarStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.v2x.CarStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.localization.LocalizationEstimate localization = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::localization(this), target, stream);
  }

  // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chassis_detail(this), target, stream);
  }

  // optional .apollo.v2x.Junction junction = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::junction(this), target, stream);
  }

  // optional .apollo.v2x.Id rsu_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::rsu_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.v2x.CarStatus)
  return target;
}

size_t CarStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.v2x.CarStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .apollo.localization.LocalizationEstimate localization = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *localization_);
    }

    // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *chassis_detail_);
    }

    // optional .apollo.v2x.Junction junction = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *junction_);
    }

    // optional .apollo.v2x.Id rsu_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rsu_id_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CarStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CarStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CarStatus::GetClassData() const { return &_class_data_; }

void CarStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CarStatus *>(to)->MergeFrom(
      static_cast<const CarStatus &>(from));
}


void CarStatus::MergeFrom(const CarStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.v2x.CarStatus)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_localization()->::apollo::localization::LocalizationEstimate::MergeFrom(from._internal_localization());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_chassis_detail()->::apollo::canbus::ChassisDetail::MergeFrom(from._internal_chassis_detail());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_junction()->::apollo::v2x::Junction::MergeFrom(from._internal_junction());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_rsu_id()->::apollo::v2x::Id::MergeFrom(from._internal_rsu_id());
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CarStatus::CopyFrom(const CarStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.v2x.CarStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarStatus::IsInitialized() const {
  return true;
}

void CarStatus::InternalSwap(CarStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CarStatus, rsu_id_)
      + sizeof(CarStatus::rsu_id_)
      - PROTOBUF_FIELD_OFFSET(CarStatus, localization_)>(
          reinterpret_cast<char*>(&localization_),
          reinterpret_cast<char*>(&other->localization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CarStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_getter, &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto_once,
      file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fcar_5fstatus_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v2x
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::v2x::CarStatus* Arena::CreateMaybeMessage< ::apollo::v2x::CarStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::v2x::CarStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
