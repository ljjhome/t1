// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/v2x/proto/v2x_obu_rsi.proto

#include "modules/v2x/proto/v2x_obu_rsi.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace apollo {
namespace v2x {
namespace obu {
constexpr ObuRsi::ObuRsi(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : points_()
  , rsu_id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , header_(nullptr)
  , ref_point_(nullptr)
  , rsi_id_(0)
  , alter_type_(0)
  , radius_(0)
  , msg_cnt_(0){}
struct ObuRsiDefaultTypeInternal {
  constexpr ObuRsiDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ObuRsiDefaultTypeInternal() {}
  union {
    ObuRsi _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ObuRsiDefaultTypeInternal _ObuRsi_default_instance_;
}  // namespace obu
}  // namespace v2x
}  // namespace apollo
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, header_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, rsu_id_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, rsi_id_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, alter_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, description_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, ref_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, points_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, radius_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::obu::ObuRsi, msg_cnt_),
  2,
  0,
  4,
  5,
  1,
  3,
  ~0u,
  6,
  7,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, -1, sizeof(::apollo::v2x::obu::ObuRsi)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::v2x::obu::_ObuRsi_default_instance_),
};

const char descriptor_table_protodef_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#modules/v2x/proto/v2x_obu_rsi.proto\022\016a"
  "pollo.v2x.obu\032!modules/common/proto/head"
  "er.proto\032#modules/common/proto/geometry."
  "proto\"\354\001\n\006ObuRsi\022%\n\006header\030\001 \001(\0132\025.apoll"
  "o.common.Header\022\016\n\006rsu_id\030\002 \001(\014\022\016\n\006rsi_i"
  "d\030\003 \001(\005\022\022\n\nalter_type\030\004 \001(\005\022\023\n\013descripti"
  "on\030\005 \001(\t\022)\n\tref_point\030\006 \001(\0132\026.apollo.com"
  "mon.Point2D\022&\n\006points\030\007 \003(\0132\026.apollo.com"
  "mon.Point2D\022\016\n\006radius\030\010 \001(\005\022\017\n\007msg_cnt\030\t"
  " \001(\005"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_deps[2] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fgeometry_2eproto,
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto = {
  false, false, 364, descriptor_table_protodef_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto, "modules/v2x/proto/v2x_obu_rsi.proto", 
  &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_once, descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto::offsets,
  file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto, file_level_enum_descriptors_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto, file_level_service_descriptors_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_getter() {
  return &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto(&descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto);
namespace apollo {
namespace v2x {
namespace obu {

// ===================================================================

class ObuRsi::_Internal {
 public:
  using HasBits = decltype(std::declval<ObuRsi>()._has_bits_);
  static const ::apollo::common::Header& header(const ObuRsi* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rsu_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rsi_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_alter_type(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::common::Point2D& ref_point(const ObuRsi* msg);
  static void set_has_ref_point(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_radius(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_msg_cnt(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

const ::apollo::common::Header&
ObuRsi::_Internal::header(const ObuRsi* msg) {
  return *msg->header_;
}
const ::apollo::common::Point2D&
ObuRsi::_Internal::ref_point(const ObuRsi* msg) {
  return *msg->ref_point_;
}
void ObuRsi::clear_header() {
  if (header_ != nullptr) header_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
void ObuRsi::clear_ref_point() {
  if (ref_point_ != nullptr) ref_point_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
void ObuRsi::clear_points() {
  points_.Clear();
}
ObuRsi::ObuRsi(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  points_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:apollo.v2x.obu.ObuRsi)
}
ObuRsi::ObuRsi(const ObuRsi& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      points_(from.points_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rsu_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_rsu_id()) {
    rsu_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rsu_id(), 
      GetArenaForAllocation());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_ref_point()) {
    ref_point_ = new ::apollo::common::Point2D(*from.ref_point_);
  } else {
    ref_point_ = nullptr;
  }
  ::memcpy(&rsi_id_, &from.rsi_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_cnt_) -
    reinterpret_cast<char*>(&rsi_id_)) + sizeof(msg_cnt_));
  // @@protoc_insertion_point(copy_constructor:apollo.v2x.obu.ObuRsi)
}

void ObuRsi::SharedCtor() {
rsu_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&header_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&msg_cnt_) -
    reinterpret_cast<char*>(&header_)) + sizeof(msg_cnt_));
}

ObuRsi::~ObuRsi() {
  // @@protoc_insertion_point(destructor:apollo.v2x.obu.ObuRsi)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ObuRsi::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rsu_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete ref_point_;
}

void ObuRsi::ArenaDtor(void* object) {
  ObuRsi* _this = reinterpret_cast< ObuRsi* >(object);
  (void)_this;
}
void ObuRsi::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObuRsi::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ObuRsi::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.v2x.obu.ObuRsi)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      rsu_id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(header_ != nullptr);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(ref_point_ != nullptr);
      ref_point_->Clear();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&rsi_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&msg_cnt_) -
        reinterpret_cast<char*>(&rsi_id_)) + sizeof(msg_cnt_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObuRsi::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bytes rsu_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_rsu_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 rsi_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_rsi_id(&has_bits);
          rsi_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 alter_type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_alter_type(&has_bits);
          alter_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string description = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.v2x.obu.ObuRsi.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .apollo.common.Point2D ref_point = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_ref_point(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .apollo.common.Point2D points = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional int32 radius = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_radius(&has_bits);
          radius_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int32 msg_cnt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_msg_cnt(&has_bits);
          msg_cnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObuRsi::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.v2x.obu.ObuRsi)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // optional bytes rsu_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_rsu_id(), target);
  }

  // optional int32 rsi_id = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_rsi_id(), target);
  }

  // optional int32 alter_type = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_alter_type(), target);
  }

  // optional string description = 5;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.v2x.obu.ObuRsi.description");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_description(), target);
  }

  // optional .apollo.common.Point2D ref_point = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::ref_point(this), target, stream);
  }

  // repeated .apollo.common.Point2D points = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_points_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_points(i), target, stream);
  }

  // optional int32 radius = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_radius(), target);
  }

  // optional int32 msg_cnt = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_msg_cnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.v2x.obu.ObuRsi)
  return target;
}

size_t ObuRsi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.v2x.obu.ObuRsi)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.common.Point2D points = 7;
  total_size += 1UL * this->_internal_points_size();
  for (const auto& msg : this->points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional bytes rsu_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_rsu_id());
    }

    // optional string description = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional .apollo.common.Header header = 1;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional .apollo.common.Point2D ref_point = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ref_point_);
    }

    // optional int32 rsi_id = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_rsi_id());
    }

    // optional int32 alter_type = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_alter_type());
    }

    // optional int32 radius = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_radius());
    }

    // optional int32 msg_cnt = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_msg_cnt());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ObuRsi::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ObuRsi::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ObuRsi::GetClassData() const { return &_class_data_; }

void ObuRsi::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ObuRsi *>(to)->MergeFrom(
      static_cast<const ObuRsi &>(from));
}


void ObuRsi::MergeFrom(const ObuRsi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.v2x.obu.ObuRsi)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_rsu_id(from._internal_rsu_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_ref_point()->::apollo::common::Point2D::MergeFrom(from._internal_ref_point());
    }
    if (cached_has_bits & 0x00000010u) {
      rsi_id_ = from.rsi_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      alter_type_ = from.alter_type_;
    }
    if (cached_has_bits & 0x00000040u) {
      radius_ = from.radius_;
    }
    if (cached_has_bits & 0x00000080u) {
      msg_cnt_ = from.msg_cnt_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ObuRsi::CopyFrom(const ObuRsi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.v2x.obu.ObuRsi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObuRsi::IsInitialized() const {
  return true;
}

void ObuRsi::InternalSwap(ObuRsi* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  points_.InternalSwap(&other->points_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rsu_id_, lhs_arena,
      &other->rsu_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObuRsi, msg_cnt_)
      + sizeof(ObuRsi::msg_cnt_)
      - PROTOBUF_FIELD_OFFSET(ObuRsi, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ObuRsi::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_getter, &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto_once,
      file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fobu_5frsi_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace obu
}  // namespace v2x
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::v2x::obu::ObuRsi* Arena::CreateMaybeMessage< ::apollo::v2x::obu::ObuRsi >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::v2x::obu::ObuRsi >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
